<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"/>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging"/>
  </configSections>
  <exceptionHandling>
    <!--异常策略池-->
    <exceptionPolicies>
      <!--默认策略-->
      <add name="defaultPolicy">
        <exceptionTypes>
          <!--添加一个异常，，异常处理类型，是一个system.exception,  ,是否需要抛出新的异常  postHandlingAction="ThrowNewException-->
          <add name="myException1" type="System.DivideByZeroException"  postHandlingAction="None" >
            <exceptionHandlers>
              <!--异常由哪个handle处理-->
              <!--<add name="ErrorMessageHandler" type="ExceptionAndLogSapmle.Exceptions.ExceptionHandlingAttribute,ExceptionAndLogSapmle" errorMessage="Server Error..."/>-->
              <add name="LoggingHandler" type="ExceptionAndLogSapmle.Exceptions.LoggingHandler,ExceptionAndLogSapmle" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"  title="尝试除零异常"/>
              
            </exceptionHandlers>
          </add>
          
          <add name="myException2" type="System.ArgumentException"  postHandlingAction="None" >
            <exceptionHandlers>
              <add name="LoggingHandler" type="ExceptionAndLogSapmle.Exceptions.LoggingHandler,ExceptionAndLogSapmle" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" title="参数异常"/>

            </exceptionHandlers>
          </add>
          

        </exceptionTypes>
      </add>
      <!--<add name="quartzPolicy">
        <exceptionTypes>
          <add name="myException" type="System.Exception"  postHandlingAction="None" >
            <exceptionHandlers>
              <add name="LoggingHandler" type="WeFramework.Web.Exceptions.LoggingHandler,WeFramework.Web" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" logCategory="General" title="ExceptionHandler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>-->
    </exceptionPolicies>
  </exceptionHandling>
  
  <loggingConfiguration tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="defalutListener" type="ExceptionAndLogSapmle.Logging,ExceptionAndLogSapmle" listenerDataType="ExceptionAndLogSapmle.Logging.EfFormattedTraceListenerData,ExceptionAndLogSapmle" formatter="jsonFormatter" />
    </listeners>
    <formatters>
      <add name="jsonFormatter" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.JsonLogFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="defalutListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <errors switchValue="All" name="errorsWarnings">
        <listeners>
          <add name="defalutListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
</configuration>
